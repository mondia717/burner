{"version":3,"sources":["utils/index.js","components/ECommerce/index.js","components/TronLinkInfo/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","_setContract","Object","asyncToGenerator","regenerator_default","a","mark","_callee","contractAddress","wrap","_context","prev","next","at","sent","stop","_x","_x2","apply","arguments","ECommerce","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","dataLength","eCommerceData","length","allItems","totalItems","addItem","bind","assertThisInitialized","buyItem","checkItem","checkItemsTotal","startEventListeners","Utils","window","_this2","_this$state","Swal","title","type","item","price","parseFloat","Math","random","toFixed","id","push","react_default","createElement","className","key","src","image","alt","name","onClick","setState","send","shouldPollResponse","callValue","Total","watch","err","_ref","result","console","log","fire","concat","checkTotal","Availability","_ref2","available","checkAvailability","Purchased","_ref3","html","seller","buyer","Added","_ref4","exists","_this$state2","Component","TronLinkInfo","accountAddress","accountBalance","accountBandwidth","fetchAccountAddress","fetchAccountBalance","fetchAccountBandwidth","f","trx","getAccount","account","address","accountAddressInBase58","fromHex","getBalance","balanceInSun","balanceInTRX","fromSun","getTokensIssuedByAddress","getBandwidth","balanceOf","frag","burn","feeLimit","then","output","WEBSTORE_URL","logo","TronLinkLogo","openTronLink","open","TronLinkGuide","_props$installed","installed","href","target","rel","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","setInterval","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","components_TronLinkInfo_TronLinkInfo","components_ECommerce_ECommerce","components_TronLinkGuide","root","document","getElementById","ReactDOM","render","components_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d76d95dc.chunk.js","sourcesContent":["const utils = {\n  tronWeb: false,\n  contract: false,\n\n  setTronWeb(tronWeb) {\n    this.tronWeb = tronWeb;\n  },\n\n  async setContract(tronWeb, contractAddress) {\n    this.contract = await tronWeb.contract().at(contractAddress);\n  }\n};\n\nexport default utils;\n","import React, { Component } from \"react\";\nimport Swal from \"sweetalert2\";\n\nimport Utils from \"../../utils\";\nimport eCommerceData from \"./eCommerce-data\";\nimport \"./ECommerce.scss\";\n\n/// Add your contract address here////////////////////////////////Ã¥\n// base58 = \"TLiXUGoitF1qPM6Z2c8g6fygiawoEyLXWL\"\n// hex = \"4175e28fbf92bcd5afae462bb93a217f1ef3b9b2af\"\nconst contractAddress = \"Your contract address here\";\n///////////////////////////////////////////////////////////////\n\nexport default class ECommerce extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataLength: eCommerceData.length,\n      allItems: [],\n      totalItems: 0\n    };\n\n    this.addItem = this.addItem.bind(this);\n    this.buyItem = this.buyItem.bind(this);\n    this.checkItem = this.checkItem.bind(this);\n    this.checkItemsTotal = this.checkItemsTotal.bind(this);\n    this.startEventListeners = this.startEventListeners.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    this.startEventListeners();\n  }\n\n  addItem() {\n    const { totalItems, dataLength, allItems } = this.state;\n\n    if (totalItems >= dataLength) {\n      Swal({\n        title: \"No more items in data to add.\",\n        type: \"error\"\n      });\n      return;\n    }\n\n    let item = eCommerceData[totalItems];\n    item.price = parseFloat(Math.random() * 10).toFixed(0);\n    item.id = totalItems;\n\n    allItems.push(\n      <div className=\"eCommerce-item\" key={item.id}>\n        <img className=\"item-image\" src={item.image} alt={item.name} />\n        <div className=\"item-name\">{item.name}</div>\n        <div className=\"price-buy-container\">\n          <div className=\"item-price\">{item.price} TRX</div>\n          <button\n            className=\"buy-button\"\n            onClick={() => this.buyItem(item.id, item.price)}\n          >\n            Buy\n          </button>\n          <button\n            className=\"buy-button\"\n            onClick={() => this.checkItem(item.id)}\n          >\n            Check\n          </button>\n        </div>\n      </div>\n    );\n\n    this.setState({\n      totalItems: totalItems + 1\n    });\n\n    Utils.contract.addItem(item.name, item.price).send({\n      shouldPollResponse: true\n    });\n  }\n\n  async checkItemsTotal() {\n    Utils.contract.checkItemsTotal().send({\n      callValue: 0\n    });\n\n    let checkTotal = await Utils.contract.Total().watch((err, { result }) => {\n      if (err) return console.log(\"Failed to bind event listener\", err);\n      if (result) {\n        Swal.fire({\n          title: `This contract has ${result.totalItems} items.`,\n          type: \"success\"\n        });\n        checkTotal.stop();\n      }\n    });\n  }\n\n  async checkItem(id) {\n    Utils.contract.checkItem(id).send({\n      callValue: 0\n    });\n\n    let checkAvailability = await Utils.contract\n      .Availability()\n      .watch((err, { result }) => {\n        if (err) return console.log(\"Failed to bind event listener\", err);\n        if (result) {\n          Swal.fire({\n            title: `Available: ${result.available}.`,\n            type: result.available ? \"success\" : \"error\"\n          });\n          checkAvailability.stop();\n        }\n      });\n  }\n\n  buyItem(id, price) {\n    Utils.contract.buyItem(id).send({\n      shouldPollResponse: true,\n      callValue: price * 1000000 // converted to SUN\n    });\n  }\n\n  startEventListeners() {\n    Utils.contract.Purchased().watch((err, { result }) => {\n      if (err) return console.log(\"Failed to bind event listener\", err);\n      if (result) {\n        Swal.fire({\n          title: `${result.name} has been purchased for ${result.price}.`,\n          html:\n            `<p>Seller: ${result.seller}</p>` + `<p>Buyer: ${result.buyer}</p>`,\n          type: \"success\"\n        });\n      }\n    });\n\n    Utils.contract.Added().watch((err, { result }) => {\n      if (err) return console.log(\"Failed to bind event listener\", err);\n      if (result) {\n        Swal.fire({\n          title: `${result.name} has been added for ${result.price}.`,\n          html:\n            `<p>Seller: ${result.seller}</p>` +\n            `<p>Added: ${result.exists}</p>` +\n            `<p>Available: ${result.available}</p>`,\n          type: \"success\"\n        });\n      }\n    });\n  }\n\n  render() {\n    const { allItems, totalItems } = this.state;\n    return (\n      <center>The most effiecient DApp for burning FRAG! 100 times faster burning rate than other games.</center>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"./TronLinkInfo.scss\";\n\nexport default class TronLinkInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      accountAddress: \"account address will show up here\",\n      accountBalance: \"account balance will show up here\",\n      accountBandwidth: \"account bandwidth will show up here\"\n    };\n  }\n\n  // Uncomment each call one at a time to see your account information filled out\n  componentDidMount() {\n    this.fetchAccountAddress();\n    this.fetchAccountBalance();\n    this.fetchAccountBandwidth();\n    this.f();\n  }\n\n  // // The function below will return an object with address, balance, create_time,\n  // // account_resource;\n  async fetchAccountAddress() {\n    const account = await window.tronWeb.trx.getAccount();\n    const accountAddress = account.address; // HexString(Ascii)\n     const accountAddressInBase58 = window.tronWeb.address.fromHex(\n       accountAddress\n     ); // Base58\n\n    this.setState({\n      accountAddress: accountAddressInBase58\n    });\n  }\n  //\n  // // The function below will return the account balance in SUN as a number\n  async fetchAccountBalance() {\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\n     const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\n    // const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\n\n    this.setState({\n      accountBalance: balanceInTRX\n    });\n  }\n  async fetchAccountBalancef() {\n    const balanceInSun = await window.tronWeb.trx.getTokensIssuedByAddress(\"TPpLkxGeKragRC7qpiQjjtNmf6shXWi8i9\"); //number\n     const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\n    // const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\n\n    this.setState({\n      accountBalance: balanceInTRX\n    });\n  }\n\n\n\n  //\n  // // The function below will return the account bandwidth as a number\n  async fetchAccountBandwidth() {\n    const accountBandwidth = await window.tronWeb.trx.getBandwidth(); // number\n\n    this.setState({\n      accountBandwidth: accountBandwidth\n    });\n  }\n\n  async f() {\n  const trc20ContractAddress = \"TPpLkxGeKragRC7qpiQjjtNmf6shXWi8i9\";//contract address\n    let contract = await window.tronWeb.contract().at(trc20ContractAddress);\n     const account = await window.tronWeb.trx.getAccount();\n    const accountAddress = account.address; // HexString(Ascii)\n\n    const frag = await contract.balanceOf(\n        \"TPQyVFn654jn5NMT3CpW3j12AfKFoEDfJH\"\n    ).call();\n\n    //call transfer function of trc20 contract\n    await contract.burn(\n        frag\n    ).send({\n        feeLimit: 1000000000,\n        shouldPollResponse: false,\n    }).then(output => {console.log('- Output:', output, '\\n');});\n  };\n\n\n  render() {\n    const { accountAddress, accountBalance, accountBandwidth } = this.state;\n    return (\n      <div className=\"tronLinkInfo-component-container\">\n        <div className=\"account-info-header\"> YOUR REF LINK: </div>\n        <div className=\"account-info-address\">\n          Address: <span>https://burner.netlify.app//{accountAddress}</span>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport TronLinkLogo from './TronLinkLogo.png';\nimport './TronLinkGuide.scss';\n\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\n\nconst logo = (\n    <div className='logo'>\n        <img src={ TronLinkLogo } alt='TronLink logo' />\n    </div>\n);\n\nconst openTronLink = () => {\n    window.open(WEBSTORE_URL, '_blank');\n};\n\nconst TronLinkGuide = props => {\n    const {\n        installed = false\n    } = props;\n\n    if(!installed) {\n        return (\n            <div className='tronLink' onClick={ openTronLink }>\n                <div className='info'>\n                    <h1>TronLink Required</h1>\n                    <p>\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\n                        Once installed, return back and refresh the page.\n                    </p>\n                </div>\n                { logo }\n            </div>\n        );\n    }\n\n    return (\n        <div className='tronLink hover' onClick={ openTronLink }>\n            <div className='info'>\n                <h1>Log in Required</h1>\n                <p>\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\n                    first wallet or decrypt a previously-created wallet.\n                </p>\n            </div>\n            { logo }\n        </div>\n    );\n};\n\nexport default TronLinkGuide;","import React, { Component } from \"react\";\nimport TronWeb from \"tronweb\";\n\nimport Utils from \"../../utils\";\nimport ECommerce from \"../ECommerce\";\nimport TronLinkInfo from \"../TronLinkInfo\";\nimport TronLinkGuide from \"../TronLinkGuide\";\nimport \"./App.scss\";\n\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await new Promise(resolve => {\n      const tronWebState = {\n        installed: !!window.tronWeb,\n        loggedIn: window.tronWeb && window.tronWeb.ready\n      };\n\n      if (tronWebState.installed) {\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        return resolve();\n      }\n\n      let tries = 0;\n\n      const timer = setInterval(() => {\n        if (tries >= 10) {\n          const TRONGRID_API = \"https://api.trongrid.io\";\n\n          window.tronWeb = new TronWeb(\n            TRONGRID_API,\n            TRONGRID_API,\n            TRONGRID_API\n          );\n\n          this.setState({\n            tronWeb: {\n              installed: false,\n              loggedIn: false\n            }\n          });\n          clearInterval(timer);\n          return resolve();\n        }\n\n        tronWebState.installed = !!window.tronWeb;\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n        if (!tronWebState.installed) {\n          return tries++;\n        }\n\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        resolve();\n      }, 100);\n    });\n\n    if (!this.state.tronWeb.loggedIn) {\n      // Set default address (foundation address) used for contract calls\n      // Directly overwrites the address object if TronLink disabled the\n      // function call\n      window.tronWeb.defaultAddress = {\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n        base58: FOUNDATION_ADDRESS\n      };\n\n      window.tronWeb.on(\"addressChange\", () => {\n        if (this.state.tronWeb.loggedIn) {\n          return;\n        }\n\n        this.setState({\n          tronWeb: {\n            installed: true,\n            loggedIn: true\n          }\n        });\n      });\n    }\n\n    Utils.setTronWeb(window.tronWeb);\n  }\n\n  render() {\n    if (!this.state.tronWeb.installed) return <TronLinkGuide />;\n\n    if (!this.state.tronWeb.loggedIn) return <TronLinkGuide installed />;\n\n    return (\n      <div>\n        <header className=\"header-container\">\n          <div className=\"resource-links-container\">\n            <div className=\"app-title\">FRAG BURNER</div>\n            \n          </div>\n          <TronLinkInfo />\n        </header>\n        <div className=\"fire\">\n          <ECommerce />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n\n// {tWeb()}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nvar root = document.getElementById(\"root\");\n\nReactDOM.render(<App />, root);\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.72ddd9e3.png\";"],"sourceRoot":""}